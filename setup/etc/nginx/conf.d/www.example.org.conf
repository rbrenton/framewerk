# www.example.org

# force redirection to https
server {
  listen 80;
  server_name www.example.org;

  root "/var/www/${server_name}/htdocs";
  access_log "/var/www/${server_name}/logs/access.log" main;
  error_log "/var/www/${server_name}/logs/error.log";

  # Allow letsencrypt.org
  location ~ /\.well-known/ {
    break;
  }

  location / {
    return 301 "https://${server_name}${request_uri}";
  }
}


server {
  listen 443;
  server_name  www.example.org;

  ssl on;
  ssl_certificate "/etc/letsencrypt/live/${server_name}/fullchain.pem";
  ssl_certificate_key "/etc/letsencrypt/live/${server_name}/privkey.pem";
  #add_header Strict-Transport-Security max-age=31536000;

  access_log "/var/www/${server_name}/logs/access.log" main;
  error_log "/var/www/${server_name}/logs/error.log";

  root "/var/www/${server_name}/htdocs/docroot";
  index index.html index.php;

  client_max_body_size 100m;

  # Process 403 and 404 errors with index.php
  error_page 403 404 /index.php;

  # Allow letsencrypt.org
  location ~ /\.well-known/ {
    try_files $uri @router;
  }

  # Deny any locations starting with a period (e.g. .htaccess, .git, .svn, etc).
  location ~ /\. {
    deny all;
  }

  # More locations to deny.
  location ~* (^/(Config|Engine|Include|Interface)|/\.|\.(inc|sh|sql|xsl|conf|yaml)$) {
    deny  all;
  }

  # Static file locations.
  location ~ ^/(favicon\.ico|font|img|q|robots\.txt|s/js|Static|Themes)($|/) {
    expires 15m;

    # Prefer static .min files for css files.
    location ~ \.css$ {
      expires 1m;
      try_files $uri.min $uri /index.php;
      default_type text/css;
    }

    # Prefer static .min files for js files.
    location ~ \.js$ {
      expires 1m;
      try_files $uri.min $uri /index.php;
      default_type application/x-javascript;
    }

    # Process .php files through php-fpm.
    location ~ \.(php|inc)$ {
      fastcgi_pass 127.0.0.1:9000;

      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

      fastcgi_intercept_errors off;
      fastcgi_read_timeout 900;
      fastcgi_send_timeout 900;
    }

    # Route everything else through /index.php
    if (!-e $request_filename) {
      rewrite ^(.*)$ /index.php last;
      break;
    }
  }

  # Handle .php files
  location ~ (\.php|^/fpm-ping)$ {
      include fastcgi_params;
      fastcgi_pass 127.0.0.1:9000;
      fastcgi_intercept_errors Off;

      fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
      fastcgi_param  PHP_ADMIN_VALUE  "open_basedir=\"/var/www/${server_name}\"
                                       error_log=\"/var/www/${server_name}/logs/php-error.log\"
                                       apc.writable=\"/var/www/${server_name}/tmp\"
                                       sys_temp_dir=\"/var/www/${server_name}/tmp\"";

      # apc.mmap_file_mask=\"/var/www/${server_name}/tmp/apc.XXXXXX\"

      fastcgi_param  PHP_VALUE        "upload_tmp_dir=\"/var/www/${server_name}/tmp\"";

      fastcgi_param  TMP              "/var/www/${server_name}/tmp";
      fastcgi_param  TMPDIR           "/var/www/${server_name}/tmp";
      fastcgi_param  TEMP             "/var/www/${server_name}/tmp";
  }

  # Locations not to process through index.php
  location ^~ ^/(favicon\.ico|robots\.txt)$ {
    # nothing
  }

  # Send through index.php, unless file exists.
  location / {

    # FIXME
    # Everything should use index.php here, but if the -e check is removed,
    # things that should have stopped processing in the "not to process"
    # location seem to fail.  So, we need extra deny locations that would
    # otherwise not be necessary, which also mangles what should be 404
    # responses for restricted files to 403.
    if (!-e $request_filename) {
      rewrite ^(.*)$ /index.php last;
      break;
    }
  }

  # Send through index.php
  location @router {
    rewrite ^(.*)$ /index.php last;
    break;
  }
}
